/*
 * nokia_3310.h
 *
 *  Created on: May 16, 2015
 */

/* This example accompanies the book
   "Embedded Systems: Introduction to ARM Cortex M Microcontrollers",
   ISBN: 978-1469998749, Jonathan Valvano, copyright (c) 2014
 Copyright 2014 by Jonathan W. Valvano, valvano@mail.utexas.edu
    You may use, edit, run or distribute this file
    as long as the above copyright notice remains
 THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
 OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 For more information about my classes, my research, and my books, see
 http://users.ece.utexas.edu/~valvano/
 */

#ifndef NOKIA5110_NOKIA5110_H_
#define NOKIA5110_NOKIA5110_H_

#include "stm32f10x.h"

#define MAX_X  84
#define MAX_Y  48
#define MAX_Y_OCTETS  (MAX_Y >> 3)

#define CONTRAST  0xB3

static const char ASCII[][5] = {
	 {0x00, 0x00, 0x00, 0x00, 0x00}// (space)
	,{0x00, 0x00, 0x5F, 0x00, 0x00}// !
	,{0x00, 0x07, 0x00, 0x07, 0x00}// "
	,{0x14, 0x7F, 0x14, 0x7F, 0x14}// #
	,{0x24, 0x2A, 0x7F, 0x2A, 0x12}// $
	,{0x23, 0x13, 0x08, 0x64, 0x62}// %
	,{0x36, 0x49, 0x55, 0x22, 0x50}// &
	,{0x00, 0x05, 0x03, 0x00, 0x00}// '
	,{0x00, 0x1C, 0x22, 0x41, 0x00}// (
	,{0x00, 0x41, 0x22, 0x1C, 0x00}// )
	,{0x08, 0x2A, 0x1C, 0x2A, 0x08}// *
	,{0x08, 0x08, 0x3E, 0x08, 0x08}// +
	,{0x00, 0x50, 0x30, 0x00, 0x00}// ,
	,{0x08, 0x08, 0x08, 0x08, 0x08}// -
	,{0x00, 0x60, 0x60, 0x00, 0x00}// .
	,{0x20, 0x10, 0x08, 0x04, 0x02}// /
	,{0x3e, 0x51, 0x49, 0x45, 0x3e} // 30 0
	,{0x00, 0x42, 0x7f, 0x40, 0x00} // 31 1
	,{0x42, 0x61, 0x51, 0x49, 0x46} // 32 2
	,{0x21, 0x41, 0x45, 0x4b, 0x31} // 33 3
	,{0x18, 0x14, 0x12, 0x7f, 0x10} // 34 4
	,{0x27, 0x45, 0x45, 0x45, 0x39} // 35 5
	,{0x3c, 0x4a, 0x49, 0x49, 0x30} // 36 6
	,{0x01, 0x71, 0x09, 0x05, 0x03} // 37 7
	,{0x36, 0x49, 0x49, 0x49, 0x36} // 38 8
	,{0x06, 0x49, 0x49, 0x29, 0x1e} // 39 9
	,{0x00, 0x36, 0x36, 0x00, 0x00}// :
	,{0x00, 0x56, 0x36, 0x00, 0x00}// ;
	,{0x00, 0x08, 0x14, 0x22, 0x41}// <
	,{0x14, 0x14, 0x14, 0x14, 0x14}// =
	,{0x41, 0x22, 0x14, 0x08, 0x00}// >
	,{0x02, 0x01, 0x51, 0x09, 0x06}// ?
	,{0x32, 0x49, 0x79, 0x41, 0x3E}// @
	,{0x7E, 0x11, 0x11, 0x11, 0x7E}// A
	,{0x7F, 0x49, 0x49, 0x49, 0x36}// B
	,{0x3E, 0x41, 0x41, 0x41, 0x22}// C
	,{0x7F, 0x41, 0x41, 0x22, 0x1C}// D
	,{0x7F, 0x49, 0x49, 0x49, 0x41}// E
	,{0x7F, 0x09, 0x09, 0x01, 0x01}// F
	,{0x3E, 0x41, 0x41, 0x51, 0x32}// G
	,{0x7F, 0x08, 0x08, 0x08, 0x7F}// H
	,{0x00, 0x41, 0x7F, 0x41, 0x00}// I
	,{0x20, 0x40, 0x41, 0x3F, 0x01}// J
	,{0x7F, 0x08, 0x14, 0x22, 0x41}// K
	,{0x7F, 0x40, 0x40, 0x40, 0x40}// L
	,{0x7F, 0x02, 0x04, 0x02, 0x7F}// M
	,{0x7F, 0x04, 0x08, 0x10, 0x7F}// N
	,{0x3E, 0x41, 0x41, 0x41, 0x3E}// O
	,{0x7F, 0x09, 0x09, 0x09, 0x06}// P
	,{0x3E, 0x41, 0x51, 0x21, 0x5E}// Q
	,{0x7F, 0x09, 0x19, 0x29, 0x46}// R
	,{0x46, 0x49, 0x49, 0x49, 0x31}// S
	,{0x01, 0x01, 0x7F, 0x01, 0x01}// T
	,{0x3F, 0x40, 0x40, 0x40, 0x3F}// U
	,{0x1F, 0x20, 0x40, 0x20, 0x1F}// V
	,{0x7F, 0x20, 0x18, 0x20, 0x7F}// W
	,{0x63, 0x14, 0x08, 0x14, 0x63}// X
	,{0x03, 0x04, 0x78, 0x04, 0x03}// Y
	,{0x61, 0x51, 0x49, 0x45, 0x43}// Z
	,{0x00, 0x00, 0x7F, 0x41, 0x41}// [
	,{0x02, 0x04, 0x08, 0x10, 0x20}// "\"
	,{0x41, 0x41, 0x7F, 0x00, 0x00}// ]
	,{0x04, 0x02, 0x01, 0x02, 0x04}// ^
	,{0x40, 0x40, 0x40, 0x40, 0x40}// _
	,{0x00, 0x01, 0x02, 0x04, 0x00}// `
	,{0x20, 0x54, 0x54, 0x54, 0x78}// a
	,{0x7F, 0x48, 0x44, 0x44, 0x38}// b
	,{0x38, 0x44, 0x44, 0x44, 0x20}// c
	,{0x38, 0x44, 0x44, 0x48, 0x7F}// d
	,{0x38, 0x54, 0x54, 0x54, 0x18}// e
	,{0x08, 0x7E, 0x09, 0x01, 0x02}// f
	,{0x08, 0x14, 0x54, 0x54, 0x3C}// g
	,{0x7F, 0x08, 0x04, 0x04, 0x78}// h
	,{0x00, 0x44, 0x7D, 0x40, 0x00}// i
	,{0x20, 0x40, 0x44, 0x3D, 0x00}// j
	,{0x00, 0x7F, 0x10, 0x28, 0x44}// k
	,{0x00, 0x41, 0x7F, 0x40, 0x00}// l
	,{0x7C, 0x04, 0x18, 0x04, 0x78}// m
	,{0x7C, 0x08, 0x04, 0x04, 0x78}// n
	,{0x38, 0x44, 0x44, 0x44, 0x38}// o
	,{0x7C, 0x14, 0x14, 0x14, 0x08}// p
	,{0x08, 0x14, 0x14, 0x18, 0x7C}// q
	,{0x7C, 0x08, 0x04, 0x04, 0x08}// r
	,{0x48, 0x54, 0x54, 0x54, 0x20}// s
	,{0x04, 0x3F, 0x44, 0x40, 0x20}// t
	,{0x3C, 0x40, 0x40, 0x20, 0x7C}// u
	,{0x1C, 0x20, 0x40, 0x20, 0x1C}// v
	,{0x3C, 0x40, 0x30, 0x40, 0x3C}// w
	,{0x44, 0x28, 0x10, 0x28, 0x44}// x
	,{0x0C, 0x50, 0x50, 0x50, 0x3C}// y
	,{0x44, 0x64, 0x54, 0x4C, 0x44}// z
	,{0x00, 0x08, 0x36, 0x41, 0x00}// {
	,{0x00, 0x00, 0x7F, 0x00, 0x00}// |
	,{0x00, 0x41, 0x36, 0x08, 0x00}// }
	,{0x08, 0x08, 0x2A, 0x1C, 0x08}// ->
	,{0x08, 0x1C, 0x2A, 0x08, 0x08}// <-
};

void nokia_5110_init(void);
void nokia_5110_clear(void);

// 48x84 bitmap image
void nokia_5110_image(const char *ptr);
void nokia_5110_hist(const uint8_t *points);

void nokia_5110_char(unsigned char data);
void nokia_5110_string(char *ptr);
// column = [0; 11], raw = [0; 5]
void nokia_5110_set_cursor(unsigned char column, unsigned char raw);

#endif /* NOKIA5110_NOKIA5110_H_ */
